version: '3.8'

services:
  # Aplicação Node.js
  app:
    build: .
    container_name: auth_api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-rootpassword}
      - DB_NAME=${DB_NAME:-auth_db}
      - JWT_SECRET=${JWT_SECRET:-sua_chave_secreta_aqui}
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - auth_network
    command: npm run dev

  # Banco de Dados MySQL
  mysql:
    image: mysql:8.0
    container_name: auth_mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-auth_db}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - auth_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-rootpassword}"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

  # phpMyAdmin (opcional - para visualizar banco)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: auth_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=${DB_PASSWORD:-rootpassword}
    depends_on:
      - mysql
    networks:
      - auth_network

volumes:
  mysql_data:
    driver: local

networks:
  auth_network:
    driver: bridge